name: Deploy to Vercel
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Setup Node.js (for Vercel CLI)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
      - name: Install Vercel CLI
        run: npm install -g vercel
        
      - name: Debug Secrets
        run: |
          echo "Checking if secrets are available (without revealing values)..."
          if [ -n "$VERCEL_TOKEN" ]; then echo "VERCEL_TOKEN is set and not empty"; else echo "VERCEL_TOKEN is not set or empty"; fi
          if [ -n "$VERCEL_ORG_ID" ]; then echo "VERCEL_ORG_ID is set and not empty"; else echo "VERCEL_ORG_ID is not set or empty"; fi
          if [ -n "$VERCEL_PROJECT_ID" ]; then echo "VERCEL_PROJECT_ID is set and not empty"; else echo "VERCEL_PROJECT_ID is not set or empty"; fi
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
        run: |
          echo "Deploying to Vercel..."
          # Esporta esplicitamente le variabili Vercel
          export VERCEL_TOKEN
          export VERCEL_ORG_ID
          export VERCEL_PROJECT_ID
          
          # Usa le variabili esportate con il comando vercel
          vercel --token "$VERCEL_TOKEN" --prod --yes \
            -e DATABASE_URL="${DATABASE_URL}" \
            -e POSTGRES_URL="${POSTGRES_URL}" \
            -e SUPABASE_URL="${SUPABASE_URL}" \
            -e SUPABASE_KEY="${SUPABASE_KEY}" \
            -e JWT_SECRET="${JWT_SECRET}" \
            -e SMTP_HOST="${SMTP_HOST}" \
            -e SMTP_PORT="${SMTP_PORT}" \
            -e SMTP_USER="${SMTP_USER}" \
            -e SMTP_PASS="${SMTP_PASS}"
